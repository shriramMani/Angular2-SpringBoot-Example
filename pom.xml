<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ipillars.test</groupId>
    <artifactId>angular2test</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.3.RELEASE</version>
    </parent>

    <dependencies>

        <!-- Spring Boot Configuration. Starter Parent takes care of the version for these -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!--dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-actuator</artifactId>
        </dependency>

        <!--dependency>
            <groupId>org.springframework.security.oauth</groupId>
            <artifactId>spring-security-oauth2</artifactId>
        </dependency-->

        <!-- CASSANDRA -->
        <!--dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
            <version>3.0.0</version>
        </dependency-->

        <!--
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-cassandra</artifactId>
        </dependency>

    <dependency>
        <groupId>com.datastax.cassandra</groupId>
        <artifactId>cassandra-driver-core</artifactId>
        <version>3.0.0</version>
    </dependency>
-->
        <!-- To use Inject instead of AutoWired -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.12</version>
        </dependency>

        <!--dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-spring-security-adapter</artifactId>
            <version>1.8.0.Final</version>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-core</artifactId>
            <version>1.8.0.Final</version>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-spring-boot-adapter</artifactId>
            <version>1.8.0.Final</version>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-tomcat8-adapter</artifactId>
            <version>1.8.0.Final</version>
        </dependency-->

        <!-- Ipillars Dependencies  -->
        <!--
                <dependency>
                    <groupId>com.ipillars.util</groupId>
                    <artifactId>fileloader</artifactId>
                    <version>1.0</version>
                </dependency>

                <dependency>
                    <groupId>com.ipillars.util</groupId>
                    <artifactId>spring</artifactId>
                    <version>1.0</version>
                </dependency>

                <dependency>
                    <groupId>com.ipillars.util</groupId>
                    <artifactId>impression</artifactId>
                    <version>1.0</version>
                </dependency>

                <dependency>
                    <groupId>com.ipillars</groupId>
                    <artifactId>common</artifactId>
                    <version>1.0</version>
                </dependency>
        -->
    </dependencies>

    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>http://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <!--repository>
            <id>codehaus-mule-repo</id>
            <name>codehaus-mule-repo</name>
            <url>
                https://repository-master.mulesoft.org/nexus/content/groups/public/
            </url>
            <layout>default</layout>
        </repository-->
    </repositories>

    <build>
        <finalName>ipillars-angular2test</finalName>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>2.10</version>
            </extension>

            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-webdav</artifactId>
                <version>1.0-beta-2</version>
            </extension>
        </extensions>

        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.ipillars.test.angular2test.main.MainController</mainClass>
                </configuration>
            </plugin>

            <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>1.0</version>
                <configuration>
                    <url>sftp://192.241.191.125</url>
                    <fromDir>${project.build.directory}</fromDir>
                    <includes>*.jar</includes>
                    <excludes>pom.xml</excludes>
                    <toDir>/home/dropuser/jar</toDir>
                    <serverId>digitalOcean-deploy</serverId>
                </configuration>
                <executions>
                    <execution>
                        <id>digitalOcean-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>upload</goal>
                        </goals>

                    </execution>
                </executions>
            </plugin>
            -->

        </plugins>

    </build>
    
</project>